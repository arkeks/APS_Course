1) сохраняем сдвигаемое значение (константу) в х1 // x1 = 0x101
2) сохраняем n (константу) в х2                   // x2 = n
3) сохраняем 32 (константу) в х3                  // x3 = 32
4) вычисляем 32 - n (x3 - x2) и сохраняем в х3    // x3 = x3 - x2   (32 - n)
5) сдвигаем х1 вправо на n (х2) и сохраняем в х2  // x2 = x1 >> x2  (x1 >> n)
6) сдвигаем х1 влево на (32 - n) и сохраняем в х3 // x3 = x1 << x3  (x1 << (32-n) )
7) складываем х2 и х3, сохраняем в х1             // x1 = x2 + x3
8) безусловный переход на +0 для постоянного вывода

1) x1 = 0x101
B C WS       CONSTANT[27:5]      A3(WA)
0 0 10 00000 00000 0000000000101 00001
                                  х1

2) x2 = n
B C WS       CONSTANT[27:5]      A3(WA)
0 0 10 00000 00000 0000000000010 00010
                       n='d2       х2

3) x3 = 32
B C WS       CONSTANT[27:5]      A3(WA)
0 0 10 00000 00000 0000000100000 00011
                       n='d32       х3

4) x3 = x3 - x2  // (32 - n)
B C WS ALU_OP  A_1   A_2   CONST   A3(WA)
0 0 11 01000  00011 00010 00000000 00011
        SUB    x3     x2             х3

5) x2 = x1 >> x2 // (x1 >> n)
B C WS ALU_OP  A_1   A_2    CONST  A3(WA)
0 0 11 00101  00001 00010 00000000 00010
        SRL    x1     x2             x2

6) x3 = x1 << x3 // x1 << (32-n)
B C WS ALU_OP  A_1   A_2   CONST   A3(WA)
0 0 11 00001  00001 00011 00000000 00011
        SLL    x1     x3             x3

7) x1 = x2 + x3
B C WS ALU_OP  A_1   A_2   CONST   A3(WA)
0 0 11 00000  00010 00011 00000000 00001
        ADD    x2     x3             х1

8) pc += 0, rd_1 = x1 (result)
B C WS ALU_OP  A_1   A_2   CONST   A3(WA)
1 0 00 00000  00001 00000 00000000 11111
        ADD     x1   x0    pc+=0     х32